<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxp.bloght.dao.BlogDoMapper">
  <resultMap id="BaseResultMap" type="com.cxp.bloght.pojo.BlogDo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="first_picture" jdbcType="VARCHAR" property="first_picture" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
    <result column="views" jdbcType="INTEGER" property="views" />
    <result column="appreciation" jdbcType="BIT" property="appreciation" />
    <result column="share_statement" jdbcType="BIT" property="share_statement" />
    <result column="commentabled" jdbcType="BIT" property="commentabled" />
    <result column="published" jdbcType="BIT" property="published" />
    <result column="recommend" jdbcType="BIT" property="recommend" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="type_id" jdbcType="BIGINT" property="type_id" />
    <result column="user_id" jdbcType="BIGINT" property="user_id" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="tag_ids" jdbcType="VARCHAR" property="tag_ids" />
    <result column="comment_count" jdbcType="INTEGER" property="comment_count" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cxp.bloght.pojo.BlogDo">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, first_picture, flag, views, appreciation, share_statement, commentabled, 
    published, recommend, create_time, update_time, type_id, user_id, description, tag_ids, 
    comment_count
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.cxp.bloght.pojo.BlogDoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.cxp.bloght.pojo.BlogDoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectNoPublishByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blog
    where  published = 0
  </select>
  <select id="selectPublishByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blog
    where  published = 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_blog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cxp.bloght.pojo.BlogDo" useGeneratedKeys="true">
    insert into t_blog (title, first_picture, flag, 
      views, appreciation, share_statement, 
      commentabled, published, recommend, 
      create_time, update_time, type_id, 
      user_id, description, tag_ids, 
      comment_count, content)
    values (#{title,jdbcType=VARCHAR}, #{first_picture,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR}, 
      #{views,jdbcType=INTEGER}, #{appreciation,jdbcType=BIT}, #{share_statement,jdbcType=BIT}, 
      #{commentabled,jdbcType=BIT}, #{published,jdbcType=BIT}, #{recommend,jdbcType=BIT}, 
      #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, #{type_id,jdbcType=BIGINT}, 
      #{user_id,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, #{tag_ids,jdbcType=VARCHAR}, 
      #{comment_count,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cxp.bloght.pojo.BlogDo" useGeneratedKeys="true">
    insert into t_blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="first_picture != null">
        first_picture,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="views != null">
        views,
      </if>
      <if test="appreciation != null">
        appreciation,
      </if>
      <if test="share_statement != null">
        share_statement,
      </if>
      <if test="commentabled != null">
        commentabled,
      </if>
      <if test="published != null">
        published,
      </if>
      <if test="recommend != null">
        recommend,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="type_id != null">
        type_id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="tag_ids != null">
        tag_ids,
      </if>
      <if test="comment_count != null">
        comment_count,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="first_picture != null">
        #{first_picture,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="views != null">
        #{views,jdbcType=INTEGER},
      </if>
      <if test="appreciation != null">
        #{appreciation,jdbcType=BIT},
      </if>
      <if test="share_statement != null">
        #{share_statement,jdbcType=BIT},
      </if>
      <if test="commentabled != null">
        #{commentabled,jdbcType=BIT},
      </if>
      <if test="published != null">
        #{published,jdbcType=BIT},
      </if>
      <if test="recommend != null">
        #{recommend,jdbcType=BIT},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="type_id != null">
        #{type_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="tag_ids != null">
        #{tag_ids,jdbcType=VARCHAR},
      </if>
      <if test="comment_count != null">
        #{comment_count,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cxp.bloght.pojo.BlogDo">
    update t_blog
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="first_picture != null">
        first_picture = #{first_picture,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="views != null">
        views = #{views,jdbcType=INTEGER},
      </if>
      <if test="appreciation != null">
        appreciation = #{appreciation,jdbcType=BIT},
      </if>
      <if test="share_statement != null">
        share_statement = #{share_statement,jdbcType=BIT},
      </if>
      <if test="commentabled != null">
        commentabled = #{commentabled,jdbcType=BIT},
      </if>
      <if test="published != null">
        published = #{published,jdbcType=BIT},
      </if>
      <if test="recommend != null">
        recommend = #{recommend,jdbcType=BIT},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="type_id != null">
        type_id = #{type_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="tag_ids != null">
        tag_ids = #{tag_ids,jdbcType=VARCHAR},
      </if>
      <if test="comment_count != null">
        comment_count = #{comment_count,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cxp.bloght.pojo.BlogDo">
    update t_blog
    set title = #{title,jdbcType=VARCHAR},
      first_picture = #{first_picture,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      views = #{views,jdbcType=INTEGER},
      appreciation = #{appreciation,jdbcType=BIT},
      share_statement = #{share_statement,jdbcType=BIT},
      commentabled = #{commentabled,jdbcType=BIT},
      published = #{published,jdbcType=BIT},
      recommend = #{recommend,jdbcType=BIT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      type_id = #{type_id,jdbcType=BIGINT},
      user_id = #{user_id,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      tag_ids = #{tag_ids,jdbcType=VARCHAR},
      comment_count = #{comment_count,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cxp.bloght.pojo.BlogDo">
    update t_blog
    set title = #{title,jdbcType=VARCHAR},
      first_picture = #{first_picture,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      views = #{views,jdbcType=INTEGER},
      appreciation = #{appreciation,jdbcType=BIT},
      share_statement = #{share_statement,jdbcType=BIT},
      commentabled = #{commentabled,jdbcType=BIT},
      published = #{published,jdbcType=BIT},
      recommend = #{recommend,jdbcType=BIT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      type_id = #{type_id,jdbcType=BIGINT},
      user_id = #{user_id,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      tag_ids = #{tag_ids,jdbcType=VARCHAR},
      comment_count = #{comment_count,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>